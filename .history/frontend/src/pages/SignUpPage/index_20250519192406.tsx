import { zSignUpTrpcInput } from '@patterns/backend/src/router/signUp/input';
import { Section } from '../../components/Section';
import { Input } from '../../components/Input';
import { useFormik } from 'formik';
import { withZodSchema } from 'formik-validator-zod';
import { Button } from '../../components/Button';
import { FormItems } from '../../components/FormItems';
import { trpc } from '../../lib/trpc';
import { useState } from 'react';
import { Informer } from '../../components/Informer';


export const SignUpPage = () => {
  const [successMessageVisible, setSuccessMessageVisible] = useState(false);
  const [submittingError, setSubmittingError] = useState<string | null>(null);
  const signUp = trpc.signUp.useMutation();
  const formik = useFormik({
    initialValues: {
      nick: '',
      password: '',
      confirmPassword: '',
    },
    validate: withZodSchema(zSignUpTrpcInput),
    onSubmit: async (values) => {
      try {
        setSubmittingError(null);
        await signUp.mutateAsync(values);
        formik.resetForm();
        setSuccessMessageVisible(true);
        setTimeout(() => {
          setSuccessMessageVisible(false);
        }, 3000);
      } catch (err: any) {
        setSubmittingError(err.message);
      }
    },
  });

  return (
    <Section title="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è">
      <form
        onSubmit={(e) => {
          e.preventDefault();
          formik.handleSubmit();
        }}
      >
        <FormItems>
          <Input name="nick" label="–õ–æ–≥–∏–Ω" formik={formik} />
          <Input name="password" label="–ü–∞—Ä–æ–ª—å" type="password" formik={formik} />
          <Input name="confirmPassword" label="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" type="password" formik={formik} />

          {!formik.isValid && !!formik.submitCount && (
            <Informer color="red">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã</Informer>
          )}

          {submittingError && <Informer color="red">{submittingError}</Informer>}
          {successMessageVisible && <Informer color="green">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üéâ</Informer>}

          <Button loading={formik.isSubmitting}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
        </FormItems>
      </form>
    </Section>
  );
};
